import pandas as pd

def get_lag(data, lags, unit):
    lagdata_output = pd.DataFrame(index=data.index)
    for lag in lags:
        lagdata = data.shift(lag, freq=unit)
        lagdatanames = [colname + "lag" + str(lag) + unit for colname in data.columns]
        lagdata.columns = lagdatanames
        lagdata_output = lagdata_output.join(lagdata)
    return lagdata_output


def get_lag_mean(data, lags, unit, meanby):
    lagdata_output = pd.DataFrame(index=data.index)
    for lag in lags:
        lagdata = data.shift(lag, freq=unit).groupby(pd.Grouper(freq=meanby)).transform('mean')
        lagdatanames = [colname + "lag" + str(lag) + unit + 'meanby' + meanby for colname in data.columns]
        lagdata.columns = lagdatanames
        lagdata_output = lagdata_output.join(lagdata)
    return lagdata_output

def gettimefeature(uniquedtseq):
    '''Get predictors generated by time
        Args:
            uniquekey: a list of datetimes
        Returns:
            A data frame that contains predictors generated by time.(Hour and DayofWeek)
    '''
    timefeature = pd.DataFrame(index = uniquedtseq)
    timefeature['Hour'] = uniquedtseq.hour
    timefeature['DayofWeek'] = uniquedtseq.weekday
    timefeature = pd.get_dummies(timefeature, prefix=['Hour', 'DayofWeek'], columns=['Hour', 'DayofWeek'])
    return timefeature